{"version":3,"sources":["components/ReceipesList.js","components/ReceipeForm.js","components/ReceipeDetail.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","inline","display","ReceipesList","props","classes","List","className","receipes","map","r","i","Divider","variant","ListItem","alignItems","style","cursor","onClick","displayReceipe","_id","ListItemText","primary","Typography","gutterBottom","name","secondary","ingredients","ing","join","ListItemSecondaryAction","IconButton","marginLeft","edge","editReceipe","deleteReceipe","ReceipeFormTextField","TextField","marginVertical","label","value","placeholder","fullWidth","margin","InputLabelProps","shrink","onChange","AddIngredientRow","Fragment","Button","size","color","addEmptyIngredient","IngredientRow","data","onChangeName","quantity","onChangeQuantity","unit","onChangeUnit","aria-label","marginTop","removeIngredientRow","index","AddStepRow","addEmptyStep","StepRow","text","onChangeText","removeStepRow","getRandomId","Math","round","random","ReceipeForm","console","log","formReceipe","useState","undefined","receipeName","setReceipeName","nbParts","setNbParts","id","ingredientRows","setIngredientRows","steps","str","stepRows","setStepRows","isUpdateMode","getReceipeFromState","result","ir","sr","textAlign","e","target","ingRow","filter","ir2","sr2","stepRow","receipe","updateReceipe","addReceipe","save","cancelReceipe","ReceipeDetail","ingredient","marginBottom","step","axios","require","App","showForm","setShowForm","setReceipes","receipesLoading","setReceipesLoading","receipeDetail","setReceipeDetail","showReceipeDetail","setShowReceipeDetail","setFormReceipe","useEffect","fetchReceipesBackend","showEditForm","a","get","response","addReceipeBackend","post","headers","alert","updateReceipeBackend","put","deleteReceipeBackend","receipeId","delete","fetchReceipeBackendAndEdit","fetchReceipeBackendAndDisplay","maxWidth","position","top","left","status","success","JSON","stringify","align","Paper","elevation","padding","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9d6f9e4.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '60vw',\n    },\n    inline: {\n        display: 'inline',\n    },\n}));\n\nexport default function ReceipesList(props) {\n    const classes = useStyles();\n\n    return (\n        <List className={classes.root}>\n            {props.receipes.map((r, i) => (\n                <div key={r._id}>\n                    {i != 0 && <Divider variant=\"middle\" />}\n                    <ListItem\n                        alignItems=\"flex-start\"\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => props.displayReceipe(r._id)}\n                    >\n                        <ListItemText\n                            primary={\n                                <Typography variant=\"h4\" gutterBottom>\n                                    {r.name}\n                                </Typography>\n                            }\n                            secondary={r.ingredients.map(ing => ing.name).join(', ')}\n                        />\n                        <ListItemSecondaryAction>\n                            <IconButton style={{ marginLeft: 15 }} edge=\"end\" onClick={() => props.displayReceipe(r._id)}>\n                                👁\n                            </IconButton>\n                            <IconButton style={{ marginLeft: 15 }} edge=\"end\" onClick={() => props.editReceipe(r._id)}>\n                                ✍️\n                            </IconButton>\n                            <IconButton style={{ marginLeft: 15 }} edge=\"end\" onClick={() => props.deleteReceipe(r._id)}>\n                                ❌\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </div>\n            ))}\n        </List>\n    );\n}\n","import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst ReceipeFormTextField = props => {\n    return (\n        <TextField\n            style={{ marginVertical: 15, ...props.style }}\n            label={props.label}\n            value={props.value}\n            placeholder={props.placeholder}\n            fullWidth={props.fullWidth ?? true}\n            margin=\"normal\"\n            InputLabelProps={{ shrink: true }}\n            variant=\"outlined\"\n            onChange={props.onChange}\n        />\n    )\n}\n\nconst AddIngredientRow = props => {\n    return (\n        <React.Fragment>\n            <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={props.addEmptyIngredient}>\n                Ajouter un ingrédient\n            </Button>\n            <div></div>\n        </React.Fragment>\n    )\n}\n\nconst IngredientRow = props => {\n    return (\n        <>\n            <ReceipeFormTextField\n                label=\"Nom ingrédient\"\n                placeholder=\"Saumon frais\"\n                fullWidth={false}\n                value={props.data.name}\n                onChange={props.onChangeName}\n            />\n            <ReceipeFormTextField\n                label=\"Quantité ingrédient\"\n                placeholder=\"250\"\n                fullWidth={false}\n                value={props.data.quantity}\n                onChange={props.onChangeQuantity}\n            />\n            <ReceipeFormTextField\n                label=\"Unité ingrédient\"\n                placeholder=\"grammes\"\n                fullWidth={false}\n                value={props.data.unit}\n                onChange={props.onChangeUnit}\n            />\n            <IconButton aria-label=\"delete\" style={{ marginTop: 15, marginLeft: 10 }} onClick={() => props.removeIngredientRow(props.index)}>\n                ❌\n            </IconButton>\n            <div></div>\n        </>\n    )\n}\n\nconst AddStepRow = props => {\n    return (\n        <React.Fragment>\n            <Button size=\"small\" variant=\"contained\" color=\"primary\" onClick={props.addEmptyStep}>\n                Ajouter une étape\n            </Button>\n            <div></div>\n        </React.Fragment>\n    )\n}\n\nconst StepRow = props => {\n    return (\n        <>\n            <ReceipeFormTextField\n                label=\"Description de l'étape\"\n                placeholder=\"Découpez le saumon en dés\"\n                value={props.data.text}\n                fullWidth={false}\n                style={{ width: 'calc(100% - 65px)' }}\n                onChange={props.onChangeText}\n            />\n            <IconButton aria-label=\"delete\" style={{ marginTop: 15, marginLeft: 10 }} onClick={() => props.removeStepRow(props.index)}>\n                ❌\n            </IconButton>\n            <div></div>\n        </>\n    )\n}\n\nconst getRandomId = () => Math.round(Math.random() * 1000000)\n\nexport default function ReceipeForm(props) {\n\n    console.log(\"START\", props.formReceipe)\n    const [receipeName, setReceipeName] = useState(props.formReceipe ? props.formReceipe.name : undefined)\n    const [nbParts, setNbParts] = useState(props.formReceipe ? props.formReceipe.nbParts : undefined)\n    const [ingredientRows, setIngredientRows] = useState(props.formReceipe ? props.formReceipe.ingredients.map(ing => ({ ...ing, id: getRandomId() })) : [])\n    const [stepRows, setStepRows] = useState((props.formReceipe && props.formReceipe.steps) ? props.formReceipe.steps.map(str => ({ text: str, id: getRandomId() })) : [])\n\n    const isUpdateMode = () => (props.formReceipe && props.formReceipe._id != null)\n\n    const save = () => {\n        const receipe = getReceipeFromState()\n        if (isUpdateMode()) {\n            //PUT (update)\n            props.updateReceipe({ ...receipe, _id: props.formReceipe._id })\n        } else {\n            //POST (create)\n            props.addReceipe(receipe)\n        }\n    }\n\n    const getReceipeFromState = () => {\n        const result = {\n            name: receipeName,\n            nbParts: nbParts,\n            ingredients: ingredientRows.map(ir => ({ name: ir.name, quantity: ir.quantity, unit: ir.unit })),\n            steps: stepRows.map(sr => sr.text)\n        }\n        console.log(\"RESULT\", result)\n        return result\n    }\n\n    return (\n        <div style={{ textAlign: 'left' }}>\n            <ReceipeFormTextField\n                label=\"Nom de la recette\"\n                placeholder=\"Tarte au chèvre et saumon\"\n                value={receipeName}\n                onChange={e => setReceipeName(e.target.value)}\n            />\n            <ReceipeFormTextField\n                label=\"Nombre de parts\"\n                placeholder=\"6\"\n                value={nbParts}\n                onChange={e => setNbParts(e.target.value)}\n            />\n\n\n            <Typography variant=\"h5\" style={{ textAlign: 'left', marginTop: 15 }}>\n                Ingrédients :\n            </Typography>\n            {ingredientRows.map((ir, i) => (\n                <IngredientRow\n                    key={ir.id}\n                    index={i}\n                    data={ir}\n                    onChangeName={e => setIngredientRows(ingredientRows.map(ingRow => (ingRow.id == ir.id) ? { ...ingRow, name: e.target.value } : ingRow))}\n                    onChangeQuantity={e => setIngredientRows(ingredientRows.map(ingRow => (ingRow.id == ir.id) ? { ...ingRow, quantity: e.target.value } : ingRow))}\n                    onChangeUnit={e => setIngredientRows(ingredientRows.map(ingRow => (ingRow.id == ir.id) ? { ...ingRow, unit: e.target.value } : ingRow))}\n                    removeIngredientRow={index => setIngredientRows(ingredientRows.filter((ir2) => ir2.id != ir.id))}\n                />\n            ))}\n            <AddIngredientRow\n                addEmptyIngredient={() => setIngredientRows([...ingredientRows, { id: getRandomId() }])}\n            />\n\n\n            <Typography variant=\"h5\" style={{ textAlign: 'left', marginTop: 15 }}>\n                Étapes de la recette :\n            </Typography>\n            {stepRows.map((sr, i) => (\n                <StepRow\n                    key={sr.id}\n                    index={i}\n                    data={sr}\n                    removeStepRow={index => setStepRows(stepRows.filter((sr2) => sr2.id != sr.id))}\n                    onChangeText={e => setStepRows(stepRows.map(stepRow => (stepRow.id == sr.id) ? { ...stepRow, text: e.target.value } : stepRow))}\n                />\n            ))}\n            <AddStepRow\n                addEmptyStep={() => setStepRows([...stepRows, { id: getRandomId() }])}\n            />\n\n            <div style={{ textAlign: 'center' }}>\n                <Button variant=\"contained\" color=\"primary\" style={{ margin: '30px 5px' }} size=\"large\" onClick={() => save()}>\n                    {isUpdateMode() ? \"Modifier\" : \"Ajouter\"} la recette\n                </Button>\n                <Button variant=\"contained\" style={{ margin: '30px 5px' }} size=\"large\" onClick={props.cancelReceipe}>\n                    Annuler\n                </Button>\n            </div>\n\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default function ReceipeDetail(props) {\n\n    return (\n        <div style={{ textAlign: 'left' }}>\n\n            <Typography variant=\"h2\" style={{ textAlign: 'center', marginTop: 15 }}>\n                {props.receipe.name}\n            </Typography>\n\n            <Typography variant=\"h5\" style={{ textAlign: 'left', marginTop: 45 }}>\n                {`Ingrédients pour ${props.receipe.nbParts} personnes :`}\n            </Typography>\n            <ul>\n                {props.receipe.ingredients.map(ingredient => (\n                    <React.Fragment>\n                        <li style={{ marginBottom: 25 }}>\n                            {`${ingredient.quantity} ${ingredient.unit ? `${ingredient.unit} de` : ''} ${ingredient.name}`}\n                        </li>\n                    </React.Fragment>\n                ))}\n            </ul>\n\n            <Typography variant=\"h5\" style={{ textAlign: 'left', marginTop: 45 }}>\n                {`Étapes de la recette :`}\n            </Typography>\n            <ul>\n                {props.receipe.steps.map(step => (\n                    <React.Fragment>\n                        <li style={{ marginBottom: 25 }}>\n                            {step}\n                        </li>\n                    </React.Fragment>\n                ))}\n            </ul>\n\n\n            <div style={{ textAlign: 'center' }}>\n                <Button variant=\"contained\" style={{ margin: '30px 5px' }} size=\"large\" onClick={props.cancelReceipe}>\n                    Retour\n                </Button>\n            </div>\n        </div>\n    )\n}\n","import './App.css';\nimport { useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button';\nimport ReceipesList from './components/ReceipesList';\nimport Typography from '@material-ui/core/Typography';\nimport ReceipeForm from './components/ReceipeForm';\nimport ReceipeDetail from './components/ReceipeDetail';\nimport Paper from '@material-ui/core/Paper';\nconst axios = require('axios');\n\nfunction App() {\n\n  const [showForm, setShowForm] = useState(false)\n  const [receipes, setReceipes] = useState([])\n  const [receipesLoading, setReceipesLoading] = useState(true)\n\n  const [receipeDetail, setReceipeDetail] = useState({})\n  const [showReceipeDetail, setShowReceipeDetail] = useState(false)\n\n  const [formReceipe, setFormReceipe] = useState(undefined)\n\n  useEffect(() => {\n    fetchReceipesBackend()\n  }, [])\n\n  const showEditForm = (data) => {\n    setFormReceipe(data)\n    setShowForm(true)\n  }\n\n  const fetchReceipesBackend = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/receipes')\n      setReceipes(response.data)\n      setReceipesLoading(false)\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  const addReceipeBackend = async receipe => {\n    if (receipe.name) {\n      try {\n        const response = await axios.post('http://localhost:5000/receipes', receipe, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        })\n        await fetchReceipesBackend()\n        setShowForm(false)\n      } catch (err) {\n        console.log(err)\n      }\n    } else {\n      alert(\"Veuillez donner un nom à la recette pour pouvoir l'ajouter.\")\n    }\n  }\n\n  const updateReceipeBackend = async receipe => {\n    if (receipe.name) {\n      if (receipe._id != null) {\n        try {\n          const response = await axios.put(`http://localhost:5000/receipes/${receipe._id}`, receipe, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          })\n          await fetchReceipesBackend()\n          setShowForm(false)\n        } catch (err) {\n          console.log(err)\n        }\n      } else {\n        alert(\"Impossible de modifier une recette sans id.\")\n      }\n    } else {\n      alert(\"Veuillez donner un nom à la recette pour pouvoir l'ajouter.\")\n    }\n  }\n\n  const deleteReceipeBackend = async receipeId => {\n    if (receipeId != null) {\n      try {\n        const response = await axios.delete(`http://localhost:5000/receipes/${receipeId}`)\n        await fetchReceipesBackend()\n      } catch (err) {\n        console.log(err)\n      }\n    } else {\n      alert(\"deleteReceipeBackend doit recevoir un id\")\n    }\n  }\n\n  const fetchReceipeBackendAndEdit = async receipeId => {\n    if (receipeId != null) {\n      try {\n        const response = await axios.get(`http://localhost:5000/receipes/${receipeId}`)\n        showEditForm(response.data)\n      } catch (err) {\n        console.log(err)\n      }\n    } else {\n      alert(\"fetchReceipeBackendAndDisplay doit recevoir un id\")\n    }\n  }\n\n  const fetchReceipeBackendAndDisplay = async receipeId => {\n    if (receipeId != null) {\n      try {\n        const response = await axios.get(`http://localhost:5000/receipes/${receipeId}`)\n        setReceipeDetail(response.data)\n        setShowReceipeDetail(true)\n      } catch (err) {\n        console.log(err)\n      }\n    } else {\n      alert(\"fetchReceipeBackendAndDisplay doit recevoir un id\")\n    }\n  }\n\n  return (\n\n    <div className=\"App\" style={{ maxWidth: '60vw', margin: '0 auto', marginBottom: 40 }}>\n\n      <div style={{ position: 'absolute', top: 0, left: 0 }}>\n        <Button size=\"small\" variant=\"contained\" onClick={async () => {\n          try {\n            const response = await axios.get('http://localhost:5000/status')\n            if (response.status == 200) {\n              if (response.data.success === true) {\n                alert(\"Succès : Connexion avec l'API OK.\")\n              } else {\n                alert(`Échec : le endpoint /status devrait répondre {\"success\":true} mais a répondu ` + JSON.stringify(response.data))\n              }\n            } else {\n              alert(\"Échec : le endpoint /status a répondu avec un code retour \" + response.status)\n            }\n          } catch (err) {\n            alert(\"Échec : la tentative de connexion au endpoint /status a généré l'erreur suivante :\\n\" + err)\n          }\n        }}>\n          Check API\n        </Button>\n      </div>\n\n      <header style={{ margin: 30, textAlign: 'center' }}>\n        <Typography variant=\"h1\">\n          Cook App\n        </Typography>\n\n      </header>\n\n      {\n        receipesLoading\n          ?\n          <div align=\"center\">\n            <Typography variant=\"h5\">\n              Chargement des recettes...\n            </Typography>\n          </div>\n          :\n          (\n            showReceipeDetail ?\n              <Paper elevation={3} style={{ padding: 30 }}>\n                <ReceipeDetail\n                  receipe={receipeDetail}\n                  cancelReceipe={() => setShowReceipeDetail(false)}\n                />\n              </Paper>\n              :\n              (\n                showForm\n                  ?\n                  <Paper elevation={3} style={{ padding: 30 }}>\n                    <ReceipeForm\n                      addReceipe={receipe => addReceipeBackend(receipe)}\n                      updateReceipe={receipe => updateReceipeBackend(receipe)}\n                      cancelReceipe={() => setShowForm(false)}\n                      formReceipe={formReceipe}\n                    />\n                  </Paper>\n                  :\n                  <div align=\"center\">\n\n                    <Button variant=\"contained\" color=\"primary\" style={{ margin: 30 }} size=\"large\" onClick={() => showEditForm()}>\n                      Ajouter une recette\n                    </Button>\n\n\n                    {receipes.length > 0\n                      ?\n                      <Paper elevation={3}>\n\n                        <ReceipesList\n                          receipes={receipes}\n                          editReceipe={id => fetchReceipeBackendAndEdit(id)}\n                          displayReceipe={id => fetchReceipeBackendAndDisplay(id)}\n                          deleteReceipe={id => deleteReceipeBackend(id)}\n                        />\n                      </Paper>\n                      :\n                      <Typography variant=\"h5\">\n                        Aucune recette enregistrée.\n                      </Typography>\n                    }\n\n                  </div>\n              )\n          )\n      }\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}